/*
========================================================================================================================================
========================================================================================================================================

Redis : اجرا می‌شود و به دلیل سرعت بالا مقیاس‌پذیری و انعطاف‌پذیری برای کشینگ RAM است که در حافظه Key-Value Store یک پایگاه داده کلید-مقدار

ذخیره می‌کند عملکرد بسیار RAM استفاده می‌شود به دلیل اینکه داده‌ها را در حافظه message queues و صف‌های پیام sessions مدیریت جلسات caching

فعال AOF یا RDB سریعی دارد. اما اگر سرور ریستارت شود و داده‌ها روی دیسک ذخیره نشده باشند اطلاعات از بین می‌روند مگر اینکه مکانیزم‌های پایداری مثل

باشند

========================================================================================================================================

1. (SET و GET) مقداردهی و دریافت مقدار 

SET key value [expiration EX seconds | PX milliseconds] [NX | XX]

EX seconds → تنظیم زمان انقضا به ثانیه

PX milliseconds → تنظیم زمان انقضا به میلی‌ثانیه

NX → ذخیره مقدار فقط اگر کلید وجود نداشته باشد

XX → ذخیره مقدار فقط اگر کلید وجود داشته باشد

SET name "Emad" EX 20  #  ذخیره می‌کند name را برای 20 ثانیه در کلید "Emad" مقدار

GET name   #   را دریافت می‌کند name مقدار کلید 

========================================================================================================================================

2. ( DEL ) حذف کلید

برای حذف یک کلید از پایگاه داده استفاده می‌شود

DEL key

DEL name  # حذف کلید name از پایگاه داده

========================================================================================================================================

3. ( EXISTS )  بررسی وجود کلید

برای بررسی اینکه آیا یک کلید در ردیس وجود دارد یا نه

اگر مقدار 1 بازگردانده شود، یعنی کلید وجود دارد

اگر مقدار 0 بازگردانده شود، یعنی کلید وجود ندارد

EXISTS username

(integer) 1  # یعنی کلید username در پایگاه داده وجود دارد

========================================================================================================================================

4. (SETNX) ذخیره مقدار فقط در صورت عدم وجود 

استفاده می‌کنیم SETNX اگر می‌خواهیم مقداری را فقط در صورتی که قبلاً وجود نداشته باشد تنظیم کنیم، از

SETNX key value

SETNX username "amir"  # فقط اگر username قبلاً وجود نداشته باشد، مقدار آن را تنظیم می‌کند

GET username

========================================================================================================================================

5. (MSET و MGET) ذخیره و دریافت چندین مقدار 

برای ذخیره و دریافت چندین مقدار در یک درخواست

MSET key1 value1 key2 value2      //      MSET name "Emad" age "25"

MGET key1 key2      //      MGET name age

========================================================================================================================================

6. (GETSET) دریافت مقدار قدیمی هنگام تنظیم مقدار جدید 

مقدار جدیدی را برای یک کلید تنظیم می‌کند و مقدار قدیمی را برمی‌گرداند GETSET دستور 

GETSET key value

SET counter 10

GETSET counter 20

10  # مقدار قبلی را بازمی‌گرداند

برابر با 20 خواهد شد counter اکنون مقدار 
 
========================================================================================================================================

7. (RENAME و RENAMENX)  تغییر نام کلید 

RENAME oldKey newKey

RENAMENX oldKey newKey

RENAME → نام کلید را تغییر می‌دهد

RENAMENX → نام کلید را تغییر می‌دهد فقط اگر کلید جدید از قبل وجود نداشته باشد

SET oldKey "some data"

RENAME oldKey newKey

GET newKey  # مقدار "some data" را نمایش می‌دهد

========================================================================================================================================
========================================================================================================================================
*/