/*
=========================================================================================================================================
=========================================================================================================================================

SET  : یک ساختار داده‌ای بدون ترتیب است که مقادیر منحصربه‌فرد را ذخیره می‌کند. این نوع داده برای مواردی که نیاز به ذخیره مقادیر بدون تکرار دارید
عبارتند از SET بسیار مفید است برخی از ویژگی‌های اصلی نوع داده‌ای

1 - آن را نادیده می‌گیرد Redis  فقط مقادیر یکتا را ذخیره می‌کند. اگر تلاش کنید مقدار تکراری اضافه کنید SET مقادیر یکتا 

2 -  ها انجام دهید SET را روی difference و تفاضلintersection اشتراک  union عملیات ریاضی : می‌توانید عملیات مجموعه‌ای مثل اتحاد 

3 -  انجام می‌شود  O(1) ها مانند افزودن، حذف و بررسی عضویت، به طور متوسط با پیچیدگی زمانی   SET‌ دسترسی سریع: عملیات روی 

=========================================================================================================================================

SET دستورات اصلی برای  

آمده است SET در زیر دستورات اصلی مربوط به نوع داده‌ای

1.  SET افزودن به  

استفاده می‌شود SADD  از دستور SET  برای افزودن یک یا چند مقدار به

SADD myset "value1" "value2" "value3"

EXAMPLE  ================================================================================================================================

SADD users "Alice" "Bob" "Charlie"

=========================================================================================================================================

2. SET نمایش اعضای  

استفاده می‌شود SMEMBERS  از دستور  SET  برای دریافت تمامی اعضای یک 

SMEMBERS myset

SMEMBERS users

1) "Alice"
2) "Bob"
3) "Charlie"

=========================================================================================================================================

3. بررسی عضویت

استفاده می‌شود  SISMEMBER  وجود دارد یا خیر، از دستور  SET  برای بررسی اینکه آیا مقداری در

SISMEMBER myset "value"

SISMEMBER users "Alice"  # خروجی: 1 (مقدار وجود دارد)

SISMEMBER users "David"  # خروجی: 0 (مقدار وجود ندارد)

=========================================================================================================================================

4. SET تعداد اعضای 

استفاده می‌شود  SCARD  از دستور SET  برای دریافت تعداد اعضای یک

SCARD myset

SCARD users   # 3  : خروجی

=========================================================================================================================================

5. SET حذف اعضای 

استفاده می‌شود   SREM  از دستور  SET  برای حذف یک یا چند مقدار از 

SREM myset "value1" "value2"

SREM users "Alice"

=========================================================================================================================================

6. عملیات مجموعه‌ای

اتحاد ( UNION ) :  استفاده می‌شود  SUNION از دستور  SET برای دریافت اتحاد دو یا چند

SUNION set1 set2

SADD set1 "Alice" "Bob"

SADD set2 "Charlie" "Bob"

SUNION set1 set2

خروجی : 

1) "Alice"
2) "Bob"
3) "Charlie"


اشتراک (INTERSECTION) :  استفاده می‌شود SINTER  از دستور  SET  برای دریافت مقادیر مشترک دو یا چند

SINTER set1 set2

خروجی برای مثال بالا

1) "Bob"

 
تفاضل ( DIFFERENCE )  : استفاده می‌شود SDIFF وجود دارند، از دستور SET   برای دریافت مقادیری که فقط در یک
 
SDIFF set1 set2

خروجی

1) "Alice"

=========================================================================================================================================

7. انتخاب یک عضو تصادفی

استفاده می‌شود SRANDMEMBER از دستور  SET   برای انتخاب یک مقدار تصادفی از 

SRANDMEMBER myset  count 

=========================================================================================================================================

8. انتخاب و حذف تصادفی

استفاده می‌شود SPOP از دستور  SET  برای انتخاب و حذف یک مقدار تصادفی از 

SPOP myset

=========================================================================================================================================
=========================================================================================================================================
*/