/*
=========================================================================================================================================
=========================================================================================================================================

استفاده بکنیم List  برای ذخیره داده هایی که ماهیتی از نوع آرایه دارند ما میتونیم در داخل  ردیس از نوع داده ای 

استفاده میکنیم LPUSH برای استفاده از این نوع داده ای از 

EXAMPLE LPUSH ==========================================================================================================================
 
LPUSH  courses "nest"  "php"   "nodejs"  "wordpress"

دستورات پایین اگر لیست ای نداشته باشیم میاد و برامون می سازد

LPUSH   به اول لیست امون اضافه میکند 

RPUSH   به آخر لیست امون میاد و اضافه میکند  

را برمی‌گرداند و هیچ تغییری ایجاد نمی‌شود nil  خالی باشد: دستور مقدار  source  اگر لیست مبدا 

=========================================================================================================================================

حالا برای این که بتونیم مقادیر ایتم های لیست امون استفاده بکنیم از دستور  زیر استفاده میکنیم

LRANGE  key  start stop  

EXAMPLE LRANGE =========================================================================================================================

LRANGE  courses  0  2

LRANGE  courses  0  -1   //  به این شکل یعنی بیا هرچی آیتم در این لیست داریم رو برام برگردون

=========================================================================================================================================

LLEN  key   این دستور به ما طول لیستی که درست کردیم رو می دهد

=========================================================================================================================================

حالا ما اگر بخایم بیایم و از یک لیست مقدار داده ای رو پاک کنیم دو تا دستور داریم

RPOP  :   برای پاک کردن لیست از سمت راست

LPOP  :   برای پاک کردن لیست از سمت چپ

=========================================================================================================================================

LREM :  این دستور برای این هستش که یک مقدار خاصی رو بتونیم از یک لیست پاک کنیم

LREM key count value

key: نام لیستی که قصد دارید مقادیر را از آن حذف کنید

count : مشخص می‌کند که چند بار باید مقدار موردنظر حذف شود

باشد  حذف از ابتدای لیست به تعداد مشخص‌شده انجام می‌شود  count > 0  اگر

باشد  حذف از انتهای لیست به تعداد مشخص‌شده انجام می‌شود  count < 0  اگر

باشد  تمام موارد مقدار مشخص‌شده در کل لیست حذف می‌شود  count = 0   اگر

value: مقدار موردنظر که می‌خواهید حذف شود

EXAMPLE LPUSH ==========================================================================================================================

1. حذف از ابتدای لیست (count > 0)

داریم  mylist  فرض کنید لیستی به نام

LPUSH mylist "a" "b" "a" "c" "a"

LRANGE mylist 0 -1

# خروجی: ["a", "c", "a", "b", "a"]

"a" حذف اولین 2 مورد از مقدار 

LREM mylist 2 "a"

LRANGE mylist 0 -1

# خروجی: ["c", "a", "b", "a"]

کلید غیرفعال (nil)   : اگر کلیدی که با آن کار می‌کنید وجود نداشته باشد، دستور هیچ تغییری ایجاد نمی‌کند و خطایی برنمی‌گرداند

EXAMPLE LPUSH ==========================================================================================================================

2. حذف از انتهای لیست (count < 0)

فرض کنید لیست همان لیست قبلی است

LRANGE mylist 0 -1

# خروجی: ["c", "a", "b", "a"]

دارد "a"  حذف اولین 1 مورد از انتهای لیست که مقدار 

LREM mylist -1 "a"

LRANGE mylist 0 -1

# خروجی: ["c", "a", "b"]

EXAMPLE LPUSH ==========================================================================================================================

3. حذف تمام موارد مقدار مشخص‌شده (count = 0)

داریم mylist2  فرض کنید لیستی به نام

LPUSH mylist2 "x" "y" "x" "z" "x"

LRANGE mylist2 0 -1

# خروجی: ["x", "z", "x", "y", "x"]

حذف تمام مقادیر "x":

LREM mylist2 0 "x"

LRANGE mylist2 0 -1

# خروجی: ["z", "y"]

=========================================================================================================================================

1. LSET

برای به‌روزرسانی مقدار یک عنصر در موقعیت مشخص در یک لیست استفاده می‌شود  LSET  دستور  

LSET key index value

key: نام لیستی که قصد دارید مقداری را در آن تغییر دهید

index: موقعیت (ایندکس) عنصری که باید تغییر کند. ایندکس از 0 شروع می‌شود و مقادیر منفی از انتهای لیست شمارش می‌شوند

value: مقدار جدیدی که می‌خواهید جایگزین مقدار قبلی شود

=========================================================================================================================================
EXAMPLE  ================================================================================================================================

1. مقداردهی اولیه لیست

LPUSH mylist "a" "b" "c"

LRANGE mylist 0 -1     # خروجی: ["c", "b", "a"]

به‌روزرسانی مقدار عنصر در موقعیت

LSET mylist 1 "x"
 
LRANGE mylist 0 -1     # خروجی: ["c", "x", "a"]

به‌روزرسانی مقدار عنصر با اندیس منفی

LSET mylist -1 "z"

LRANGE mylist 0 -1  # خروجی: ["c", "x", "z"]

دریافت می‌کنید ERR index out of range  اگر اندیسی که مشخص کرده‌اید خارج از محدوده باشد، خطای

=========================================================================================================================================

LTRIM : برای محدود کردن اندازه لیست به محدوده‌ای مشخص از ایندکس‌ها استفاده می‌شود. این دستور تنها عناصر موجود در محدوده مشخص‌شده را نگه می‌دارد و بقیه را حذف می‌کند

LTRIM key start stop

key: نام لیستی که قصد دارید آن را محدود کنید

start: اندیس شروع محدوده  از 0 شروع می‌شود

stop: اندیس پایان محدوده

=========================================================================================================================================
EXAMPLE  ================================================================================================================================

مقداردهی اولیه لیست

LPUSH mylist "a" "b" "c" "d" "e"

LRANGE mylist 0 -1    # خروجی: ["e", "d", "c", "b", "a"]

محدود کردن لیست به اندیس‌های 1 تا 3

LTRIM mylist 1 3

LRANGE mylist 0 -1    # خروجی: ["d", "c", "b"]

حذف تمام عناصر به جز عنصر در اندیس 0

LTRIM mylist 0 0

LRANGE mylist 0 -1   # خروجی: ["d"]

اگر بازه‌ای که مشخص کرده‌اید خالی باشد، لیست به طور کامل حذف می‌شود

اگر کلید وجود نداشته باشد، دستور تاثیری نخواهد داشت

=========================================================================================================================================

LINSERT برای درج یک مقدار جدید در یک لیست موجود استفاده می‌شود. این دستور به شما اجازه می‌دهد که  مقدار جدید را قبل یا بعد از   

در لیست درج کنید pivot یک مقدار مشخص

LINSERT key BEFORE|AFTER pivot value

key: نام لیست که مقدار جدید باید در آن درج شود.

pivot: مقداری که مقدار جدید نسبت به آن درج خواهد شد

BEFORE | AFTER:  اضافه شود  pivot از مقدار مشخص‌شده AFTER یا بعد BEFORE مشخص می‌کند که مقدار جدید قبل 

value: مقدار جدیدی که باید به لیست اضافه شود

در موقعیت‌های مختلف LINSERT رفتار 
 
اگر کلید وجود نداشته باشد → هیچ عملی انجام نمی‌شود و مقدار 0 برمی‌گردد

اگر عملیات موفقیت‌آمیز باشد → طول جدید لیست را برمی‌گرداند

در لیست وجود نداشته باشد → هیچ تغییری در لیست رخ نمی‌دهد و مقدار -1 برمی‌گردد pivot اگر مقدار 

=========================================================================================================================================

LINDEX : اگر بخواهید یک مقدار را بر اساس ایندکس آن در لیست بگیرید، می‌توانید از دستور  استفاده کنید

key: نام لیستی که می‌خواهید مقدار را از آن دریافت کنید

index: شماره ایندکس مقدار مورد نظر (ایندکس از ۰ شروع می‌شود)

=========================================================================================================================================
=========================================================================================================================================
*/