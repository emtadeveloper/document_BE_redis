/*
=========================================================================================================================================
=========================================================================================================================================

استفاده بکنیم List  برای ذخیره داده هایی که ماهیتی از نوع آرایه دارند ما میتونیم در داخل ردیس از نوع داده ای 

استفاده میکنیم LPUSH برای استفاده از این نوع داده ای از 

EXAMPLE LPUSH ==========================================================================================================================
 
LPISH  courses "nest"  "php"   "nodejs"  "wordpress"

دستورات پایین اگر لیست اای نداشته باشیم میاد و برامون می سازد

LPISH   به اول لیست امون اضافه میکند 

RPUSH   به آخر لیست امون میاد و اضافه میکند  

=========================================================================================================================================

حالا برای این که بتونیم مقادیر ایتم های لیست امون استفاده بکنیم از دستور  زیر استفاده میکنیم

LRANGE  key  start stop  

EXAMPLE LRANGE =========================================================================================================================

LRANGE  courses  0  2

LRANGE  courses  0  -1   //  به این شکل یعنی بیا هرچی آیتم در این لیست داریم رو برام برگردون

=========================================================================================================================================

LLEN  key   این دستور به ما طول لیستی که درست کردیم رو می دهد

=========================================================================================================================================

حالا ما اگر بخایم بیایم و از یک لیست مقدار داده ای رو پاک کنیم دو تا دستور داریم

RPOP  :   برای پاک کردن لیست از سمت راست

LPOP  :   برای پاک کردن لیست از سمت چپ

=========================================================================================================================================

LREM :  این دستور برای این هستش که یک مقدار خاصی رو بتونیم از یک لیست پاک کنیم

LREM key count value

key: نام لیستی که قصد دارید مقادیر را از آن حذف کنید

count : مشخص می‌کند که چند بار باید مقدار موردنظر حذف شود

باشد  حذف از ابتدای لیست به تعداد مشخص‌شده انجام می‌شود  count > 0  اگر

باشد  حذف از انتهای لیست به تعداد مشخص‌شده انجام می‌شود  count < 0  اگر

باشد  تمام موارد مقدار مشخص‌شده در کل لیست حذف می‌شود  count = 0   اگر

value: مقدار موردنظر که می‌خواهید حذف شود

EXAMPLE LPUSH ==========================================================================================================================

1. حذف از ابتدای لیست (count > 0)

داریم  mylist  فرض کنید لیستی به نام

LPUSH mylist "a" "b" "a" "c" "a"

LRANGE mylist 0 -1

# خروجی: ["a", "c", "a", "b", "a"]

"a" حذف اولین 2 مورد از مقدار 

LREM mylist 2 "a"

LRANGE mylist 0 -1

# خروجی: ["c", "a", "b", "a"]

کلید غیرفعال (nil)   : اگر کلیدی که با آن کار می‌کنید وجود نداشته باشد، دستور هیچ تغییری ایجاد نمی‌کند و خطایی برنمی‌گرداند

EXAMPLE LPUSH ==========================================================================================================================

2. حذف از انتهای لیست (count < 0)

فرض کنید لیست همان لیست قبلی است

LRANGE mylist 0 -1

# خروجی: ["c", "a", "b", "a"]

دارد "a"  حذف اولین 1 مورد از انتهای لیست که مقدار 

LREM mylist -1 "a"

LRANGE mylist 0 -1

# خروجی: ["c", "a", "b"]

EXAMPLE LPUSH ==========================================================================================================================

3. حذف تمام موارد مقدار مشخص‌شده (count = 0)

داریم mylist2  فرض کنید لیستی به نام

LPUSH mylist2 "x" "y" "x" "z" "x"

LRANGE mylist2 0 -1

# خروجی: ["x", "z", "x", "y", "x"]

حذف تمام مقادیر "x":

LREM mylist2 0 "x"

LRANGE mylist2 0 -1

# خروجی: ["z", "y"]

=========================================================================================================================================

1. LSET

برای به‌روزرسانی مقدار یک عنصر در موقعیت مشخص در یک لیست استفاده می‌شود  LSET  دستور  

LSET key index value

key: نام لیستی که قصد دارید مقداری را در آن تغییر دهید

index: موقعیت (ایندکس) عنصری که باید تغییر کند. ایندکس از 0 شروع می‌شود و مقادیر منفی از انتهای لیست شمارش می‌شوند

value: مقدار جدیدی که می‌خواهید جایگزین مقدار قبلی شود

=========================================================================================================================================
EXAMPLE  ================================================================================================================================

1. مقداردهی اولیه لیست

LPUSH mylist "a" "b" "c"

LRANGE mylist 0 -1     # خروجی: ["c", "b", "a"]

به‌روزرسانی مقدار عنصر در موقعیت

LSET mylist 1 "x"
 
LRANGE mylist 0 -1     # خروجی: ["c", "x", "a"]

به‌روزرسانی مقدار عنصر با اندیس منفی

LSET mylist -1 "z"

LRANGE mylist 0 -1  # خروجی: ["c", "x", "z"]

دریافت می‌کنید ERR index out of range  اگر اندیسی که مشخص کرده‌اید خارج از محدوده باشد، خطای

=========================================================================================================================================

LTRIM : برای محدود کردن اندازه لیست به محدوده‌ای مشخص از ایندکس‌ها استفاده می‌شود. این دستور تنها عناصر موجود در محدوده مشخص‌شده را نگه می‌دارد و بقیه را حذف می‌کند

LTRIM key start stop

key: نام لیستی که قصد دارید آن را محدود کنید

start: اندیس شروع محدوده (از 0 شروع می‌شود

stop: اندیس پایان محدوده

=========================================================================================================================================
EXAMPLE  ================================================================================================================================

مقداردهی اولیه لیست

LPUSH mylist "a" "b" "c" "d" "e"

LRANGE mylist 0 -1    # خروجی: ["e", "d", "c", "b", "a"]

محدود کردن لیست به اندیس‌های 1 تا 3

LTRIM mylist 1 3

LRANGE mylist 0 -1    # خروجی: ["d", "c", "b"]

حذف تمام عناصر به جز عنصر در اندیس 0

LTRIM mylist 0 0

LRANGE mylist 0 -1   # خروجی: ["d"]

اگر بازه‌ای که مشخص کرده‌اید خالی باشد، لیست به طور کامل حذف می‌شود

اگر کلید وجود نداشته باشد، دستور تاثیری نخواهد داشت

=========================================================================================================================================

Redis در  RPOPLPUSH دستور   

RPOPLPUSH source destination

source: نام لیستی که عنصر از انتهای آن حذف می‌شود

destination: نام لیستی که عنصر به ابتدای آن اضافه می‌شود

RPOPLPUSH رفتار دستور 
 
را برمی‌گرداند و هیچ تغییری ایجاد نمی‌شود nil  خالی باشد: دستور مقدار  source  اگر لیست مبدا 

وجود نداشته باشد ردیس لیست جدیدی ایجاد کرده و مقدار را در ابتدای آن قرار می‌دهد destination اگر لیست مقصد

یکسان باشند: عنصر از انتهای لیست حذف شده و به ابتدای همان لیست اضافه می‌شود (چرخش در لیست) source و destination  اگر

مثال‌ها

1. انتقال از یک لیست به لیست دیگر

RPUSH list1 "a" "b" "c"
RPUSH list2 "x" "y"

RPOPLPUSH list1 list2
LRANGE list1 0 -1  # خروجی: ["a", "b"] 

LRANGE list2 0 -1  # خروجی: ["c", "x", "y"]

2. انتقال به همان لیست (چرخش در لیست)

RPUSH list1 "a" "b" "c"

RPOPLPUSH list1 list1
LRANGE list1 0 -1  # خروجی: ["c", "a", "b"]

3. رفتار با لیست خالی

RPOPLPUSH empty_list another_list   # خروجی: nil

=========================================================================================================================================

Redis در LINSERT دستور 

برای درج یک عنصر جدید در یک لیست استفاده می‌شود. این دستور به شما اجازه می‌دهد یک مقدار جدید را قبل یا بعد از یک مقدار موجود در لیست درج کنید

LINSERT key BEFORE|AFTER pivot value

key: نام لیستی که قصد دارید مقداری به آن اضافه کنید

BEFORE | AFTER: تعیین می‌کند که مقدار جدید قبل از یا بعد از مقدار مشخص‌شده (pivot) درج شود

pivot: مقداری که نسبت به آن، مقدار جدید درج می‌شود

value: مقدار جدیدی که باید به لیست اضافه شود

=========================================================================================================================================

LINSERT  رفتار دستور 

اگر کلید وجود نداشته باشد: هیچ عملی انجام نمی‌شود و دستور مقدار 0 را برمی‌گرداند

اگر مقدار pivot در لیست یافت نشود: هیچ تغییری در لیست رخ نمی‌دهد و دستور مقدار -1 را برمی‌گرداند

اگر عملیات موفقیت‌آمیز باشد: طول جدید لیست برگردانده می‌شود

1. مقداردهی اولیه لیست:
RPUSH mylist "a" "b" "c"
LRANGE mylist 0 -1   # خروجی: ["a", "b", "c"]

2. درج مقدار قبل از pivot:
LINSERT mylist BEFORE "b" "x" 
LRANGE mylist 0 -1  # خروجی: ["a", "x", "b", "c"]

3. درج مقدار بعد از pivot:
LINSERT mylist AFTER "b" "y"
LRANGE mylist 0 -1  # خروجی: ["a", "x", "b", "y", "c"]

4. تلاش برای درج با یک pivot ناموجود:
LINSERT mylist BEFORE "z" "w"  # خروجی: -1 (چون "z" در لیست وجود ندارد)

5. رفتار با کلید ناموجود:
LINSERT non_existing_list BEFORE "a" "x"   # خروجی: 0 (چون کلید وجود ندارد)

=========================================================================================================================================

LINDEX :   میتونیم برحسب یک ایندکسی یک مقداری رو بگیریم
 
=========================================================================================================================================
=========================================================================================================================================
*/